<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap"
        rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>

    <style>
        body {
            /* overflow: hidden; */
            font-family: "Plus Jakarta Sans", sans-serif;
        }

        #showInstruction,
        #hideInstruction {
            cursor: pointer;
        }

        .text-end,
        .blue-text {
            color: blue;
            font-weight: bold;
        }

        .formula-box {

            padding: 10px;
            margin-bottom: 10px;
        }



        span {
            font-size: small;
            padding: 0.2rem;
            text-align: end;
        }

        #slider {
            padding: 0%;
            margin-top: 1.5vh;
        }

        .inst {
            padding-left: 10rem;
        }

        .highlight-completion-time {
            background-color: #b3d9ff;
        }

        #bottom {
            background: #331a53;
            height: 7vh;
        }

        #navBar {
            background: linear-gradient(135deg, #F7F4FA, #8B7C9E);
            height: 10vh;
        }

        #navIteam {
            font-size: 25px;
            margin: 2vw;
        }
    </style>
    <title>FCFS Project</title>
</head>

<body>
    <%- include('../components/Header.ejs') -%>
        <%- include('../components/Sidebar.ejs', {sidebarData: { Name: "CPU Scheduling - FCFS" , Intro: `It is the
            simplest algorithm, where the processes are executed in the order they arrive in the ready queue. The
            process that arrives first gets executed first, and the next process in the queue is scheduled only after
            the previous one completes its execution. It is non-preemptive which means once a process starts is
            execution, it will continue to execute until it finishes. No high priority process can interrupt in
            between.` , learningObjective: `<ul>
            In this experiment, you will be able to do the following:
            <li> Learn about the FCFS algorithm</li>
            <li> Implementation and Simulation</li>
            <li> Waiting Time (WT) analysis</li>
            <li> Turn-around Time (TAT) Evaluation</li>
            <li> Real-world scenario</li>
            <li> Comparison of FCFS with other scheduling algorithms</li>
            </ul>` ,
            overview: `Participants will gain a practical understanding of the FCFS scheduling algorithm, its
            implications, and its role in managing processes in operating systems`,
            def: `<ul>
                <li><strong>Arrival Time (AT):</strong> The time at which a process arrives in the ready queue.</li>
                <li><strong> Burst Time (BT) or CPU Time:</strong> : The amount of time a process needs to complete its
                    execution.</li>
                <li><strong> Completion Time (CT):</strong> The time at which a process has finished its execution</li>
                <li><strong>Turnaround Time (TAT):</strong> The total time a process takes from arriving to completion
                </li>
                <li><strong>Waiting Time (WT):</strong> Waiting time is the amount of time a process spends waiting in
                    the ready queue before it gets the CPU for execution</li>
                <li><strong>Gantt Chart:</strong>A Gantt chart is like a picture/timeline that shows when different
                    processes or tasks start and finish in a system. It helps us see the order and duration of each task
                </li>
            </ul>`,
            preTestQuiz: "" ,postTestQuiz: "" , simulation: `<div class="row py-4">
                <div class="col"></div>

                <div class="col"></div>
            </div>
            <div class="row py-4 border-top border-bottom">
                <div class="col"></div>
                <div class="col text-center">
                    <h5>INSTRUCTIONS</h5>
                </div>
                <div class="col">
                    <span class="material-symbols-outlined" onclick="openInstruction()" id="showInstruction">
                        expand_more
                    </span>
                    <span class="material-symbols-outlined" onclick="closeInstruction()" id="hideInstruction">
                        expand_less
                    </span>
                </div>
            </div>

            <div class="row py-2" id="instruction">
                <div class="inst">
                    <p>Hi this is some information about the formula's used and the working.</p>
                    <p>
                    <ul>
                        <li>Click Start to see it in action!</li>
                        <li>Click Reset to start again.</li>
                        <li>Click "Add Gantt chart" to add the processes in the Gantt chart. </li>
                    </ul>
                    </p>
                    <p>Turn around time is calculated by, TAT = CT - AT</p>
                    <p>Waiting time is calculated by, WT = TAT - BT</p>
                </div>
            </div>

            <!-- Modal -->
            <div class="modal fade" id="addProcessModal" tabindex="-1" aria-labelledby="addProcessModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="addProcessModalLabel">Add a process</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <input type="text" name="processName" id="processName" class="rounded-2 px-1 py-2"
                                placeholder="Process Name" />
                            <input type="number" name="arrivalTime" id="arrivalTime" class="rounded-2 px-1 py-2"
                                placeholder="Arrival Time" />
                            <input type="number" name="burstTime" id="burstTime" class="rounded-2 px-1 py-2"
                                placeholder="Burst Time" />
                        </div>
                        <div class="modal-footer text-center">
                            <button type="button" class="btn btn-primary" onclick="addProcess()"
                                data-bs-dismiss="modal">Add
                                Process</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row py-4">
                <div class="col-md-4"></div>
                <div class="col-6 col-md-2 text-center">
                    <button class="btn rounded-4 px-5 py-3" onclick="reset()"
                        style="background-color: #7F4EBD; color: white;">Reset</button>
                </div>
                <div class="col-6 col-md-2 text-center">
                    <button class="btn rounded-4 px-5 py-3" onclick="createProcesses_main()"
                        style="background-color: #7F4EBD; color: white;" id="btn_Start">Start</button>
                </div>
                <div class="col-md-4"></div>
            </div>
            <div class="row py-2">
                <div class="col-md-2"></div>
                <div class="col text-center">
                    <table class="table table-striped table-bordered text-center" id="tableData">
                        <thead class="table-dark" id="head-table">
                            <tr id="tableHeadRow">
                                <th scope="col-2">PROCESS ID</th>
                                <th scope="col-2">ARRIVAL TIME</th>
                                <th scope="col-2">BURST TIME</th>
                                <th scope="col-2" style="display: none" id="completionTimeHeader">
                                    COMPLETION TIME
                                </th>
                                <th scope="col-2" style="display: none" id="completionTimeHeader3">
                                    TURN AROUND TIME
                                </th>
                                <th scope="col-2" style="display: none" id="completionTimeHeader2">
                                    WAITING TIME
                                </th>
                            </tr>
                        </thead>
                        <tbody id="tableContent"></tbody>
                    </table>
                </div>
                <div class="col-md-2"></div>
            </div>
            <div class="row py-2">
                <div class="col-2 text-center p-2">
                    <h5>GANTT CHART</h5>
                    <button class="btn" style="background-color: #7F4EBD; color: white;" onclick="addGanttChart()"
                        id="addGanttBtn">
                        Add Process to gantt chart
                    </button>
                </div>
                <div class="col">
                    <div class="row bg-light p-4 px-4" id="ganttChart"></div>
                </div>
                <div class="col-2"></div>
            </div>
            <!-- Add these lines inside the <body> tag, above the tableData -->
            <div class="row py-2">
                <div class="col-md-2"></div>
                <div class="col text-center">
                    <div id="tatFormula" class="formula-box"><strong>Turnaround Time (TAT) Formula:</strong> TAT =
                        Completion
                        Time -
                        Arrival Time</div>
                    <div id="wtFormula" class="formula-box"><strong>Waiting Time (WT) Formula:</strong> WT = TAT - Burst
                        Time
                    </div>

                </div>
                <div class="col-md-2"></div>
            </div>
            <div class="row" style="height: 15vh;"></div>
            <div id="leftSide" style="position: fixed; top: 5rem; left: 0; padding: 30px; size: 30px; width: 30rem;">
            </div>` ,
            } }) -%>



            <%- include('../components/Footer.ejs', { sticky: true }) -%>
                <script>
                    const quizData = [
                        {
                            question: "What does FCFS stand for in the context of operating systems?",
                            options: ["Fast-Computing Fast-Serving", "First-Come, First-Serve", "Flexible Computing for System", "Front-End CPU Scheduling"],
                            answer: "First-Come, First-Serve"
                        },
                        {
                            question: "In the FCFS algorithm, which process gets executed first?",
                            options: ["The process with the shortest burst time", "The process with the highest priority", "The process with the longest burst time", "The process with the lowest priority"],
                            answer: "The process with the highest priority"
                        },
                        {
                            question: "Which of the following is a disadvantage of the FCFS scheduling algorithm?",
                            options: ["Low turnaround time", "Convoy effect", "Efficient for time-sharing systems", "Dynamic process adaptation"],
                            answer: "Convoy effect"
                        },
                        {
                            question: "What does 'Turnaround Time' represent in the context of process scheduling?",
                            options: ["The time a process spends waiting in the ready queue", "The total time from arrival to completion of a process", "The time a process is actively executing on the CPU", "The time a process spends waiting for input/output operations"],
                            answer: "The total time from arrival to completion of a process"
                        },
                        {
                            question: "Which of the following statements is true regarding FCFS?",
                            options: ["It is always the optimal scheduling algorithm.", "It may lead to high waiting times, especially for long processes.", "It is a preemptive scheduling algorithm.", "It prioritizes processes with higher priority levels"],
                            answer: "It may lead to high waiting times, especially for long processes."
                        }
                    ];
                    const quizData2 = [
                        {
                            question: "What is the primary advantage of the FCFS scheduling algorithm?",
                            options: ["Low waiting time", "High turnaround time", "Simplicity and ease of implementation", "Dynamic process adaptation"],
                            answer: "Simplicity and ease of implementation"
                        },
                        {
                            question: "In a Gantt chart, what does each horizontal bar represent?",
                            options: ["Completion time of a process", "Waiting time of a process", "Time the CPU is idle", "Execution time of a process"],
                            answer: "Execution time of a process"
                        },
                        {
                            question: "Which term is used to describe the amount of time a process spends waiting in the ready queue before getting the CPU?",
                            options: ["Turnaround time", "Burst time", "Waiting time", "Completion time"],
                            answer: "Waiting time"
                        },
                        {
                            question: "Why might FCFS be considered less suitable for real-time systems with strict deadlines?",
                            options: ["It minimizes turnaround time effectively.", "It may lead to high waiting times.", "It is preemptive in nature.", "It prioritizes short processes."],
                            answer: "It may lead to high waiting times."
                        },
                        {
                            question: "In FCFS, if processes arrive at times 2, 4, and 6, what is the order in which they will be executed?",
                            options: ["2, 4, 6", "6, 4, 2", "4, 6, 2", "2, 6, 4"],
                            answer: "2, 4, 6"
                        }
                    ];

                </script>
                <script src="../static/Sidebar.js"></script>
                <script src="../static/CPU-FCFS.js"></script>
</body>

</html>